	while (game->map[++row])
		while (game->map[row][col] && pj < 2)
			if (game->map[row][col] == pj2)
	free(game->map);
	while (game->map[++b])
		free(game->map[b]);
//	free(game->map);
	game->wall = mlx_xpm_file_to_image()
	game->map = NULL;
	game->lenght_size = -1;
	game->with_size = -1;
		game->mlx = mlx_init();
		print_map(game->map);
	print_map(game->map);
//	printf("valor de p row %i, col %i",game->pr,game->pc);	
	print_map(game->map);
	print_map(game->maps);
	game->mlx_w = mlx_new_window (game->mlx, game->lenght_size  * 40, game->with_size * 40 , "Hello World");
	print_map(game->maps);
	img_ptr = 	mlx_xpm_file_to_image(game->mlx, "sprite/wall.xpm", &i, &j);
//	mlx_put_image_to_window(game->mlx, game->mlx_w, img_ptr, (1 *50), (1 * 50));
	mlx_hook(game->mlx_w, 17, 1L << 0 , (void *)exit, NULL);
	mlx_hook(game->mlx_w, 2, 1L << 0 , (void *) moviment, game);
	mlx_loop(game->mlx);
	printf("\ncoin cuantiti %i", game->coin);
				game->pr = row;
				game->pc = col;
	while(game->map[i][j] != '1' && game->map[i][j] != 'X') 
		if (game->map[i][j] == 'P')
			game->pjy = i;
			game->pjx = j;
		if(game->map[i][j] == 'C')
			game->coin--;
		if(game->map[i][j] == 'E')
			game->exit++;
		game->map[i][j] = 'X';
	serch_player(game->map, game);
	game->exit = 0;
	printf("\n############# antes valor de p exit%i ################\n",game->exit);
	bt_confirm(game, game->pr,game->pc);
	printf("\n######### despues valor de p exit%i ##############\n",game->exit);
	if(game->coin != 0)
	if(game->exit != 1)
	game->wall = mlx_xpm_file_to_image(game->mlx,"sprite/wall.xpm", &i, &j);
	game->coin2 = mlx_xpm_file_to_image(game->mlx,"sprite/item.xpm", &i, &j);
	game->pj = mlx_xpm_file_to_image(game->mlx,"sprite/player.xpm", &i, &j);
	game->floor= mlx_xpm_file_to_image(game->mlx,"sprite/floor.xpm", &i, &j);
	game->dorrexit = mlx_xpm_file_to_image(game->mlx,"sprite/exit.xpm", &i, &j);
	while (game->maps[row])
		while (game->maps[row][col])
		if (game->maps[row][col] == '1')
				mlx_put_image_to_window(game->mlx,
					game->mlx_w, game->wall, col * 40, row * 40);
		if (game->maps[row][col] == 'C')
				mlx_put_image_to_window(game->mlx,
					game->mlx_w, game->coin2, col * 40, row * 40);
		if (game->maps[row][col] == 'P')
				mlx_put_image_to_window(game->mlx,
					game->mlx_w, game->pj, col * 40, row * 40);
		if (game->maps[row][col] == 'E')
				mlx_put_image_to_window(game->mlx,
					game->mlx_w, game->dorrexit, col * 40, row * 40);
		if (game->maps[row][col] == '0')
				mlx_put_image_to_window(game->mlx,
					game->mlx_w, game->floor, col * 40, row * 40);
	game->map = ft_split(all_line, '\n');
	game->maps = ft_split(all_line, '\n');
	len = ft_strlen(game->map[0]);
	while (game->map[i])
		compare = ft_strlen(game->map[i]);
	game->lenght_size =  (int)len;
	game->with_size =(int) i;
	game->coin = 0; 
	while (game->map[indi])
		while (game->map[indi][a++])
			if(game->map[indi][a] == 'C')
				game->coin++;
			if (ft_strchr(f, game->map[indi][a]) == NULL)
	while(game->map[row][++col])
		if(game->map[row][col] != '1')
	while (game->map[++row])
		if(game->map[row][col] != '1')
		if (game->map[row][col] != '1')
		if (game->map[row][col] != '1')
	game->wall = mlx_xpm_file_to_image(game->mlx, "sprite/wall.xpm", &i, &j);
